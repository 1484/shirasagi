<%= jquery do %>
  var options = {};
  options.request_url = "<%= request.url %>";
  options.workflow_node = "workflow" + "<%= @cur_node? @cur_node.id : "" %>";
  options.redirect_location = "<%= @item.try(:branch?) ? @item.master.private_show_path : "" %>";
  options.errors = {};
  options.errors.not_select = "<%= @model.t :workflow_approvers %><%= t("errors.messages.not_select") %>";

  var workflow = new SS_Workflow('.mod-workflow', options);
<% end %>

<div class="mod-workflow">

  <% if @item.state == "closed" %>
    <% if @item.allowed?(:approve, @cur_user, site: @cur_site) && @item.workflow_state == "request" %>
      <% @item.workflow_pull_up_approvers_at(@item.workflow_current_level).each do |workflow_approver| %>
        <% next if @cur_user._id != workflow_approver[:user_id] || @item.approve_disabled?(workflow_approver[:state]) %>
        <section class="mod-workflow-approve">
          <div class="addon-view">
            <div class="addon-head">
              <h2><%= t("workflow.buttons.approve") %>/<%= t("workflow.buttons.remand") %><%= @model.tt :approve_remand %></h2>
            </div>
            <div class="addon-body">
              <%= text_area :remand, :comment, value: "" %>
              <div class="buttons">
                <% if workflow_approver[:state] == 'request' %> 
                <%= button_tag t("workflow.buttons.approve"), { updatetype: :approve, class: "update-item btn-primary" } %>
                <% elsif workflow_approver[:state] == 'pending' %>
                <%= button_tag t("workflow.buttons.pull_up"), { updatetype: :approve, class: "update-item btn-primary" } %>
                <% end %>
                <%= button_tag t("workflow.buttons.remand"), { updatetype: :remand, class: "update-item btn-default" } %>
              </div>
              <div class="checkbox">
                <% force = @cur_site.forced_update rescue nil %>
                <% if force == "enabled" %>
                <%= check_box_tag 'forced-update', true, true, class: 'forced' %><%= t("errors.messages.forced_update") %>
                <% else %>
                <%= check_box_tag 'forced-update', true, false, class: 'forced' %><%= t("errors.messages.forced_update") %>
                <% end %>
              </div>
            </div>
          </div>
        </section>
      <% end %>
    <% end %>

    <% if @item.allowed?(:edit, @cur_user, site: @cur_site) && @item.workflow_member.blank? %>
      <% if @item.try(:cloned_name?) %>
        <section class="mod-workflow-request">
          <h1><%= t("errors.messages.invalid_approve_name") %></h1>
        </section>
      <% elsif !@item.workflow_state? || @item.allowed?(:reroute, @cur_user, site: @cur_site, grants_none_to_owner: true) %>
        <section class="mod-workflow-request">
          <div class="see request-setting workflow-partial-section"></div>
        </section>
      <% end %>
    <% end %>
  <% end %>

  <% if @item.workflow_state? %>
  <div class="mod-workflow-view">
    <dl class="see">
      <% if @item.workflow_state == "cancelled" %>

        <dt><%= @model.t :workflow_state %></dt>
        <dd><%= t("workflow.state.#{@item.workflow_state}") if @item.workflow_state.present? %></dd>
        <dd><%= t("workflow.request_cancelled_message") %></dd>

      <% else %>

        <dt><%= @model.t :workflow_user_id %></dt>
        <dd>
          <% if @item.workflow_member.present? %>
            <%= "#{@item.workflow_member.name}(#{t("workflow.member")})" %>
          <% elsif @item.workflow_user.present? %>
            <%= "#{@item.workflow_user.long_name}(#{@item.workflow_user.email})" %>
          <% else %>
            <%= t("workflow.user_deleted") %>
          <% end %>
        </dd>

        <dt><%= @model.t :workflow_state %></dt>
        <dd>
          <%= t("workflow.state.#{@item.workflow_state}") if @item.workflow_state.present? %>
          <% if @item.allowed?(:edit, @cur_user, site: @cur_site) %>
          <%= link_to(t('workflow.buttons.cancel'), { action: :request_cancel }, class: :btn) rescue nil %>
          <% end %>
        </dd>

        <% if @item.workflow_comment.present? %>
          <dt><%= @model.t :workflow_comment %></dt>
          <dd><%= @item.workflow_comment %></dd>
        <% end %>

        <% if @item.workflow_pull_up.present? %>
          <dt><%= @model.t :workflow_pull_up %></dt>
          <dd><%= @item.label :workflow_pull_up %></dd>
        <% end %>

        <dt><%= @model.t :workflow_approvers %></dt>
        <dd>
          <% @item.workflow_approvers.each do |workflow_approver| %>
            <% user  = SS::User.where(id: workflow_approver[:user_id]).first %>
            <% state = t("workflow.state.#{workflow_approver[:state]}") %>
            <% if user %>
              <%= "#{workflow_approver[:level]}:#{user.long_name}(#{user.email})：#{state}" %><br /><%= workflow_approver[:comment] %><br />
            <% else %>
              <%= "#{workflow_approver[:level]}:#{t("workflow.user_deleted")}：#{state}" %><br /><%= workflow_approver[:comment] %><br />
            <% end %>
          <% end if @item.workflow_approvers.present? %>
        </dd>

      <% end %>
    </dl>
  </div>
  <% end %>

</div>
