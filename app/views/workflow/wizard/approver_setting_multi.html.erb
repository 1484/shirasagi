<%= ss_field_tag_set :route, @route.name, label: t("workflow.route"), disabled: true %>
<%= ss_field_tag_set :workflow_pull_up, nil, label: @model.t(:workflow_pull_up), disabled: true do %>
  <%= text_field_tag :workflow_pull_up, @route.label(:pull_up), disabled: true, name: nil, id: nil %>
  <%= hidden_field :workflow, :on_remand, value: @route.on_remand %>
<% end %>
<%= ss_field_tag_set :workflow_on_remand, nil, label: @model.t(:workflow_on_remand), disabled: true do %>
  <%= text_field_tag :workflow_pull_up, @route.label(:on_remand), disabled: true, name: nil, id: nil %>
  <%= hidden_field :workflow, :on_remand, value: @route.on_remand %>
<% end %>
<%= render file: "workflow/wizard/_approver_agent" %>
<%= ss_field_tag_set("workflow_comment", @item.workflow_comment, type: :text_area, label: @model.t(:workflow_comment), tt: @model.tt(:workflow_comment), class: "form-control") %>

<% @route.levels.each do |level| %>
  <%= ss_field_tag_set("level", nil, label: @route.class.t(:level, level: level)) do %>
    <%= text_field_tag :requried_count, @route.required_count_label_at(level), disabled: true, name: nil, id: nil %>
    <%= hidden_field_tag "workflow_required_counts", @route.required_count_at(level) %>
    <%= hidden_field_tag "workflow_approver_attachment_uses", @route.approver_attachment_use_at(level) %>
  <% end %>

  <%= ss_field_tag_set(:approvers, nil, label: @route.class.t(:approvers), disabled: true) do %>
    <%
      users = @route.approver_users_at(level)
      users = users.select(&:present?).select { |user| @item.allowed?(:approve, user, site: @cur_site) && user.enabled? }
    %>
    <div id="item_group_ids" class="table-responsive">
      <table class="index table table-striped">
        <tbody>
        <% users.each do |user| %>
          <td>
            <%= user.long_name %>
            <%= hidden_field_tag "workflow_approvers", "#{level},#{user.id},#{@route.approver_user_editable?(level, user) ? '1' : ''},pending," %>
          </td>
          <td>
            <%= user.email %>
          </td>
        <% end %>
        </tbody>
      </table>
    </div>
  <% end %>
<% end %>
<% if @ss_mode == :gws && @route.circulations.present? %>
  <% 1.upto(@route.class::MAX_CIRCULATIONS).each do |level| %>
    <% users = @route.circulation_users_at(level).active.to_a %>
    <% if users.present? %>
      <%= hidden_field_tag "workflow_circulation_attachment_uses", @route.circulation_attachment_use_at(level) %>
      <dl class="see request-setting">
        <dt><%= t("workflow.circulation_step") %> <%= @route.class.t :level, level: level %></dt>
        <dd>
          <%
            names = users.map(&:long_name)
            emails = users.map(&:email)
          %>
          <% users.each do |user| %>
            <%= hidden_field_tag "workflow_circulations", "#{level},#{user.id},pending," %>
          <% end %>
          <%= br names.zip(emails).join("\n") %>
        </dd>
      </dl>
    <% end %>
  <% end %>
<% end %>
<dl class="see request-setting">
  <dd>
    <div class="buttons">
      <%= button_tag t("workflow.buttons.request"), { updatetype: :request, class: "update-item btn-primary" } %>
      <%= button_tag t("workflow.buttons.cancel"), { class: "workflow-route-cacnel btn-default" } %>
    </div>
    <div class="checkbox">
      <label>
        <% force = @cur_site.forced_update rescue nil %>
        <% if force == "enabled" %>
        <%= check_box_tag 'forced-request', true, true, class: 'forced' %><%= t("errors.messages.forced_update") %>
        <% else %>
        <%= check_box_tag 'forced-request', true, false, class: 'forced' %><%= t("errors.messages.forced_update") %>
        <% end %>
      </label>
    </div>
  </dd>
</dl>
