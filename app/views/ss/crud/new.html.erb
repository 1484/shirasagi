<% addons = @addons || @item.try(:addons) || [] %>
<% @addon_navi = proc { render file: "_addon_navi" } %>

<% if ::File.exists?("#{Rails.root}/app/views/#{params[:controller]}/_menu.html.erb") %>
<div id="menu"><%= render partial: "menu" %></div>
<% elsif controller.menu_view_file %>
<div id="menu"><%= render partial: controller.menu_view_file %></div>
<% end %>

<%= form_for :item, url: { action: :create }, html: { id: "item-form", multipart: true, autocomplete: :off } do |f| %>
  <%= error_messages_for :item %>

  <div class="addon-views">
    <%
      addon_options = {}
      addon_options[:id] = "addon-basic"
      addon_options[:head] = @addon_basic_name || t("ss.basic_info") if addons.size > 0
    %>
    <% buf = render file: "_form", locals: { f: f, addon: addon_options } %>
    <%= render "ss/crud/addon_form", addon: addon_options do %>
      <%= buf %>
    <% end %>
    <%= render file: "_addons_form", locals: { f: f, addons: addons } %>
  </div>

  <footer class="send">
    <% if @crud_buttons %>
      <% @crud_buttons.call f %>
    <% else %>
      <%= f.submit t("ss.buttons.save"), class: 'btn-primary save' %>
      <%= f.button t("ss.buttons.cancel"), class: 'btn-default', type: :reset, onclick: "location.href='#{url_for(action: :index)}'; return false;" %>
    <% end %>
  </footer>
<% end %>

<%= jquery do %>SS.confirmUnloading();<% end %>
